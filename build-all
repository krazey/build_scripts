#!/bin/bash
SCRIPTNAME=$(basename $BASH_SOURCE)

## import vars
source build-config.txt

## temp vars
product_device=(${DEVICES//,/ })
IN=0

## build
while [ 1 ]
do
if [ -z ${product_device[$IN]} ]
then
    echo "--end--/all builds finished" >> $LOGDIR/$LOG
    exit 0
else
    if [ $IN = 0 ]
    then
        echo "--start--build+sync--${product_device[$IN]}" >> $LOGDIR/$LOG
        if [ "$3" = "clean" ]
        then
            echo "--clean--$OUT" >> $LOGDIR/$LOG
            cd $BUILDDIR; source build/envsetup.sh; make clobber >> $LOGDIR/$LOG 2>&1; cd $SCRIPTPATH
        fi
        ( time ./build-script ${product_device[$IN]} sync ) >> $LOGDIR/$LOG 2>&1
        echo "--end--build+sync--/${product_device[$IN]}" >> $LOGDIR/$LOG
    else
        echo "--start--build--${product_device[$IN]}" >> $LOGDIR/$LOG
        ( time ./build-script ${product_device[$IN]} ) >> $LOGDIR/$LOG 2>&1
        echo "--end--build--/${product_device[$IN]}" >> $LOGDIR/$LOG
    fi
    if [ -z $1 ]
    then
        echo no upload, variable not set
    else
        if [ "$1" = "upload" ] && [ "$2" = "infra" ]
        then
            echo "--start--upload+infra-${product_device[$IN]}" >> $LOGDIR/$LOG
            ( time ./build-upload ${product_device[$IN]} infra ) >> $LOGDIR/$LOG 2>&1
            echo "--end--upload+infra-/${product_device[$IN]}" >> $LOGDIR/$LOG
        elif [ "$1" = "upload" ]
        then
            echo "--start--upload--${product_device[$IN]}" >> $LOGDIR/$LOG
            ( time ./build-upload ${product_device[$IN]} ) >> $LOGDIR/$LOG 2>&1
            echo "--end--upload--/${product_device[$IN]}" >> $LOGDIR/$LOG
        else
            echo no upload, fix typo: $SCRIPTNAME $1 $2
        fi
    fi
    (( IN++ ))
fi
done
