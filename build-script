#!/bin/bash
SCRIPTNAME=$(basename $BASH_SOURCE)

if [ -z $1 ]
then exit 2
fi

## import vars
source build-config.txt

## setup environment
source .profile
cd $BUILDDIR
source build/envsetup.sh
export USE_CCACHE=1
export CCACHE_EXEC=/usr/bin/ccache
ccache -M 32G
export CCACHE_COMPRESS=1

if [ "$1" = "purge" ]
then
    echo "--clean--$OUT" >> $LOGDIR/$LOG
    make clobber >> $LOGDIR/$LOG 2>&1; cd $SCRIPTPATH
    exit 0
fi

## sync repos
if [ -z $2 ]
then echo no repo sync, variable not set
else
    if [ "$2" = "sync" ]
    then echo syncing repo && repo sync -c --force-sync --no-clone-bundle --no-tags --no-repo-verify -j$(nproc)
    else echo no repo sync, fix typo: $2
    fi
fi

## begin build process and write duration stats to logfile
echo "begining build process for $1" >> $LOGDIR/$LOG 2>&1
breakfast $1
if [ -z $3 ]
then ( time mka bacon -j$THREADS ) >> $LOGDIR/$LOG 2>&1
else mka bacon -j$THREADS
fi

## detect if zip was created, then move to HOME
if [ -e "$OUT"/lineage-*.zip ]
then
    ## get array from filename for version, date, device etc
    cd $OUT && BUILD=`ls lineage-*.zip` && FILENAME=${BUILD,,} && cd $T
    ## generate recovery image name from build.zip
    IFS='-' && read -a name_array <<< "$FILENAME" && unset IFS
    FILENAME_IMG="${name_array[0]}-${name_array[1]}-${name_array[2]}-recovery-$1.img"
    if [ -z $3 ]
    then
        ## move zip and img
        echo "moving ROM zip and RECOVERY image"
        mv $OUT/lineage-*zip "$ROMDIR/$FILENAME"
        if [ -f "$OUT/recovery.img" ]
        then mv $OUT/recovery.img "$ROMDIR/$FILENAME_IMG"
        else mv $OUT/boot.img "$ROMDIR/$FILENAME_IMG"
        fi
        ## log data
        date -d ${name_array[2]} +%Y-%m-%d >> $TMPDIR/$1.txt
        BUILD_DATE_UNIXTIME="$(cat $T/out/build_date.txt)"
        echo $BUILD_DATE_UNIXTIME >> $TMPDIR/$1.txt
        sha256sum $ROMDIR/$FILENAME | awk '{print $1}' >> $TMPDIR/$1.txt
        du -b $ROMDIR/$FILENAME | awk '{print $1}' >> $TMPDIR/$1.txt
        echo $FILENAME >> $TMPDIR/$1.txt
        sha256sum $ROMDIR/$FILENAME_IMG | awk '{print $1}' >> $TMPDIR/$1.txt
        du -b $ROMDIR/$FILENAME_IMG | awk '{print $1}' >> $TMPDIR/$1.txt
        echo $FILENAME_IMG >> $TMPDIR/$1.txt
        cp $TMPDIR/$1.txt $TMPDIR/re_$1.txt
        ex -s +%g/^/m0 +wq $TMPDIR/re_$1.txt
        ## remove builds from the same day in $1.txt
        BUILD_DATE="$(sed -n '8 p' $TMPDIR/re_$1.txt)"
        BUILD_DATE_OLD="$(sed -n '16 p' $TMPDIR/re_$1.txt)"
        if [ $BUILD_DATE = $BUILD_DATE_OLD ]
        then
            echo "removing builds from the same day" >> $LOGDIR/$LOG
            sed "9,16d" $TMPDIR/re_$1.txt > "$TMPDIR/re_$1_temp.txt"
            cp $TMPDIR/re_$1_temp.txt $TMPDIR/re_$1.txt
            cp $TMPDIR/re_$1.txt $TMPDIR/$1.txt
            ex -s +%g/^/m0 +wq $TMPDIR/$1.txt
        fi
    else
        echo test-build, no logging: $TMPDIR/$1.txt
        ## move zip and img
        echo "moving ROM zip and RECOVERY image to $TESTDIR"
        mv $OUT/lineage-*zip "$TESTDIR/$FILENAME"
        if [ -f "$OUT/recovery.img" ]
        then mv $OUT/recovery.img "$TESTDIR/$FILENAME_IMG"
        else mv $OUT/boot.img "$TESTDIR/$FILENAME_IMG"
        fi
    fi
fi

mka installclean target-files-package otatools && cd $SCRIPTPATH
