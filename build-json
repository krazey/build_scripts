#!/bin/bash
# creating $INFRAUPDATER/nginx/builds.json for infra/updater after uploading files or "build-genlog"
SCRIPTNAME=$(basename $BASH_SOURCE)
DEBUG=0

## import vars
source build-config.txt

## temp vars
product_device=(${DEVICES//,/ })
ARRAY="RECOVERY,FILESIZE_IMG,SHA256HASH_IMG,FILENAME,FILESIZE,SHA256HASH,BUILD_DATETIME,BUILD_DATE"
array=(${ARRAY//,/ })
IN=0
NUM=0
LINE=1
ENDOFLINE=32
INIT=1

## start
rm $INFRAUPDATER/nginx/builds.json
echo } >> $INFRAUPDATER/nginx/builds.json
while [ 1 ]
do
    if [ -z ${product_device[$IN]} ]
    then break
    else
        if [ $INIT = 1 ]
        then
            echo } ] >> $INFRAUPDATER/nginx/builds.json
            INIT=$(( INIT-1 ))
        else
            if [ $LINE = 1 ]
            then echo } ], >> $INFRAUPDATER/nginx/builds.json
            fi
        fi
        declare -A ${array[$NUM]}=$(sed -n ''$LINE' p' $TMPDIR/re_${product_device[$IN]}.txt)
        if [ $DEBUG = 1 ]
        then echo ${product_device[$IN]}: NUM: $NUM, LINE: $LINE, array: ${array[$NUM]}: ${!array[$NUM]}  && sleep 0.2
        fi
        if [ $NUM -le 6 ]
        then
            NUM=$(( NUM+1 ))
            LINE=$(( LINE+1 ))
        else
            IFS='-'
            read -a rom_array <<< "$FILENAME"
            read -a img_array <<< "$RECOVERY"
            unset IFS
            echo  { '"'date'"': '"'$BUILD_DATE'"', '"'datetime'"': $BUILD_DATETIME, '"'filename'"': '"'$FILENAME'"', '"'filepath'"': '"'/$FILENAME'"', \
                    '"'sha256'"': '"'$SHA256HASH'"', '"'size'"': $FILESIZE, '"'type'"': '"'${rom_array[3]}'"', '"'version'"': '"'${rom_array[1]}'"', '"'recovery'"': { \
                    '"'date'"': '"'$BUILD_DATE'"', '"'datetime'"': $BUILD_DATETIME, '"'filename'"': '"'$RECOVERY'"', '"'filepath'"': '"'/$RECOVERY'"', \
                    '"'sha256'"': '"'$SHA256HASH_IMG'"', '"'size'"': $FILESIZE_IMG, '"'type'"': '"'${img_array[3]}'"', '"'version'"': '"'${img_array[1]}'"' \
                  } >> $INFRAUPDATER/nginx/builds.json
            NUM=0
            LINE=$(( LINE+1 ))
            if [ -z "$(sed -n ''$LINE' p' $TMPDIR/re_${product_device[$IN]}.txt)" ] || [ $LINE -gt $ENDOFLINE ]
            then
                echo '"'${product_device[$IN]}'"': [ >> $INFRAUPDATER/nginx/builds.json
                IN=$(( IN+1 ))
                LINE=1
            else
                echo }, >> $INFRAUPDATER/nginx/builds.json
            fi
        fi
    fi
done

## end
echo { >> $INFRAUPDATER/nginx/builds.json
ex -s +%g/^/m0 +wq $INFRAUPDATER/nginx/builds.json
cd $INFRAUPDATER && docker-compose down && docker-compose up -d && cd $SCRIPTPATH
